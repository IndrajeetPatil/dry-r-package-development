---
#title: "DRY R Package Development"
format:
  revealjs: 
    theme: simple
    slide-number: true
    preview-links: auto
    footer: "Source code for the slides can be found [here](https://github.com/IndrajeetPatil/dry-r-package-development/)."
#author: "Indrajeet Patil"
#affiliation: 
execute:
  echo: true
---

## DRY R Package Development {style="margin-top: 3em;"}

::: {style="margin-top: 2em; margin-bottom: 1em; font-size: 0.75em"}

Indrajeet Patil

Software Engineer

:::


::: {style="margin-top: 2em; font-size:0.5em"}

- [Link to slides](https://indrajeetpatil.github.io/dry-r-package-development/)
- [Github repo](https://github.com/IndrajeetPatil/dry-r-package-development/)

:::

![](media/simpsons.png){.absolute width="400" height="250" right="100" top="100"}

<!-- Need to install extension from https://github.com/quarto-ext/fontawesome -->
<!-- Run `quarto install extension quarto-ext/fontawesome` in terminal -->

# DRY it up

Why should you not repeat yourself?

## Don't Repeat Yourself (DRY) Principle {.smaller}

# Documentation

How not to repeat yourself while writing documentation.

## What do users read? {.smaller}

What users consult to find needed information maybe context-dependent.

</br>

. . .

{{< fa brands readme size=2xl >}} **README**: While exploring the package repository.

</br>

{{< fa file-pdf size=2xl >}} **Manual**: While reading PDF manual or help pages in the IDE.

</br>

{{< fa file size=2xl >}} **Vignettes**: While reading documentation on CRAN.

. . .

</br>

This highlights that including crucial information **only in one place** makes it likely that the users might miss out on it in certain contexts.

## Go forth and multiply (without repetition)

Some documentation is important enough to be included in multiple places (e.g. in the function documentation and in a vignette).

How can this be done while avoiding repetition?

That is, how can we document something just once but include it in multiple locations?

## Child documents {.smaller}

[child documents](https://bookdown.org/yihui/rmarkdown-cookbook/child-document.html)

## Self-study {.smaller}

Example packages that use this method to repeat docs across manual, README, and vignettes.

- [`{pkgdown}`](https://github.com/r-lib/pkgdown/tree/main/man/rmd-fragments)

- [`{statsExpressions}`](https://github.com/IndrajeetPatil/statsExpressions/tree/main/man/rmd-fragments)

# Data

How not to repeat yourself while creating and re-using example datasets.

## Example data

If none of the existing datasets are usable to illustrate your functions, you can create your own example dataset.

But using it in examples, vignettes, README, etc. will require that you define it multiple times.

How can you avoid this repetition?

## Shipping data in a package {.smaller}

Let's say your example dataset `exdat` is defined as:

```{r}
exdat <- matrix(c(71, 50, 30, 100), nrow = 2)
```

. . . 

:::: {.columns}

::: {.column width='70%'}

**Saving data**

For future reference, save script to create the dataset.

```{r, eval=FALSE}
exdat <- matrix(c(71, 50, 30, 100), nrow = 2)
save(exdat, file = "data/exdat.rdata")
```

This stores dataset in `data/exdat.rdata`.

You can document it in `R/data.R`.

:::

::: {.column width='30%'}

**Directory structure**

```
â”œâ”€â”€ DESCRIPTION
â”œâ”€â”€ R
â”œâ”€â”€ data-raw
â”‚   â””â”€â”€ exdat.R
â”œâ”€â”€ data
â”‚   â””â”€â”€ exdat.rdata
â”œâ”€â”€ R
â”‚   â””â”€â”€ data.R
```

:::

::::

. . . 

`exdat` can now be used in examples, tests, vignettes, etc.; there is no need to define it every time it is used.

:::{.callout-caution}

## Don't forget!

If you include datasets, set `LazyData: true` in the `DESCRIPTION` file.

:::

## Self-study {.smaller}

Examples of R packages that define datasets and use them repeatedly.

- [`{ggstatsplot}`](https://github.com/IndrajeetPatil/ggstatsplot)

- [`{effectsize}`](https://github.com/easystats/effectsize)

# Unit testing

- parametrized unit testing
- testing datasets in helper.R

# Condition messages

- error messages as an output of R functions saved in a list instead of bare strings

# Dependency specification

- a single place to specify NAMESPACE (avoid many importFrom calls)

# Find me at...

{{< fa brands twitter >}} [Twitter](http://twitter.com/patilindrajeets)

{{< fa brands linkedin >}} [LikedIn](https://www.linkedin.com/in/indrajeet-patil-397865174/)

{{< fa brands github >}} [GitHub](http://github.com/IndrajeetPatil)

{{< fa solid link >}} [Website](https://sites.google.com/site/indrajeetspatilmorality/)

{{< fa solid envelope >}} [E-mail](mailto:patilindrajeet.science@gmail.com)

# Thank You 

And Happy Package Development! ðŸ˜Š

## Session information {.smaller}

```{r}
sessioninfo::session_info(include_base = TRUE)
```

