---
#title: "DRY R Package Development"
format:
  revealjs: 
    theme: simple
    slide-number: true
    preview-links: auto
    footer: "Source code for the slides can be found [here](https://github.com/IndrajeetPatil/dry-r-package-development/)."
#author: "Indrajeet Patil"
#affiliation: 
execute:
  echo: true
---

## DRY R Package Development {style="margin-top: 3em;"}

::: {style="margin-top: 2em; margin-bottom: 1em; font-size: 0.75em"}

Indrajeet Patil

Software Engineer

:::


::: {style="margin-top: 2em; font-size:0.5em"}

- [Link to slides](https://indrajeetpatil.github.io/dry-r-package-development/)
- [Github repo](https://github.com/IndrajeetPatil/dry-r-package-development/)

:::

![](media/simpsons.png){.absolute width="400" height="250" right="100" top="100"}

<!-- Need to install extension from https://github.com/quarto-ext/fontawesome -->
<!-- > quarto install extension quarto-ext/fontawesome -->

# DRY it up

Why should you not repeat yourself?

## Don't Repeat Yourself (DRY) Principle {.smaller}

# Documentation

How not to repeat yourself while writing documentation.

## What do users read? {.smaller}

What users consult to find needed information will depend on the context.

. . .

</br>

{{< fa brands readme size=2xl >}} **README**: When users are exploring the package repository.

</br>

{{< fa file-pdf size=2xl >}} **Manual**: When users are reading CRAN manual or help pages in the IDE.

</br>

{{< fa file size=2xl >}} **Vignettes**: When users are reading CRAN documentation.

. . . 

</br>

:::{.callout-caution}

## Possible duplication

This means that sometimes we may need to duplicate the same information in more than one place. 

How can we do so without repeating ourselves?

:::

# Data

How not to repeat yourself while creating and re-using example datasets.

## Example data

Sometimes none of the existing datasets might be usable to illustrate your functions. In such cases, you may create your own example dataset.

But you don't need to define it every time you use it. Otherwise, you will need to define it in examples, vignettes, README, etc.

How can you avoid this repetition?

## Shipping data in a package {.smaller}

Let's say your example dataset `exdat` is defined as:

```{r}
exdat <- matrix(c(71, 50, 30, 100), nrow = 2)
```

. . . 

:::: {.columns}

::: {.column width='60%'}

**Saving data**

You can save the script to generate the data in `data-raw/exdat.R`.

```{r, eval=FALSE}
exdat <- matrix(c(71, 50, 30, 100), nrow = 2)
save(exdat, file = "data/exdat.rdata")
```

This will store data in `data/exdat.rdata`.

You can document it in `R/data.R`.

:::

::: {.column width='40%'}

**Directory structure**

```
â”œâ”€â”€ DESCRIPTION
â”œâ”€â”€ R
â”œâ”€â”€ data-raw
â”‚   â””â”€â”€ exdat.R
â”œâ”€â”€ data
â”‚   â””â”€â”€ exdat.rdata
â”œâ”€â”€ R
â”‚   â””â”€â”€ data.R
```

:::

::::

. . . 

Now `exdat` is defined only once, and can be used in examples, tests, vignettes, README, etc.!

::: aside

Don't forget to set `LazyData:true` in the `DESCRIPTION` file.

:::

## Self-study 

Examples of R packages that define datasets and use them repeatedly in their documentation.

- [`{ggstatsplot}`](https://github.com/IndrajeetPatil/ggstatsplot)

- [`{effectsize}`](https://github.com/easystats/effectsize)

# Unit testing

- parametrized unit testing
- testing datasets in helper.R

# Condition messages

- error messages as an output of R functions saved in a list instead of bare strings

# Dependency specification

- a single place to specify NAMESPACE (avoid many importFrom calls)

# Find me at...

{{< fa brands twitter >}} [Twitter](http://twitter.com/patilindrajeets)

{{< fa brands linkedin >}} [LikedIn](https://www.linkedin.com/in/indrajeet-patil-397865174/)

{{< fa brands github >}} [GitHub](http://github.com/IndrajeetPatil)

{{< fa solid link >}} [Website](https://sites.google.com/site/indrajeetspatilmorality/)

{{< fa solid envelope >}} [E-mail](mailto:patilindrajeet.science@gmail.com)

# Thank You 

And Happy Package Development! ðŸ˜Š

## Session information {.smaller}

```{r}
sessioninfo::session_info(include_base = TRUE)
```

